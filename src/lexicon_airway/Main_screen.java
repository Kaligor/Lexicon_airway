/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lexicon_airway;

import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author User
 */
public class Main_screen extends javax.swing.JFrame
{

    static final int FIRSTCLASS = 1;
    static final int ECONOMYCLASS = 2;

    static final int FIRSTCLASSPRICE = 20000;
    static final int ECONOMYCLASSPRICE = 5000;

    String admin = "";

    Logic logic = new Logic(true);
    int totalPris = 0;
    int classTotal = FIRSTCLASSPRICE;
    int foodTotal = 0;
    int drinkTotal = 0;

    int planeFirstClass = 0;
    int planeEcoClass = 0;
    int planeTotalCap = 0;
    int planeTotalPayout = 0;

    DefaultListModel<Airplane> planeListArray = new DefaultListModel();

    DefaultListModel<Food> foodListArrayFirstClass = new DefaultListModel();
    DefaultListModel<Food> foodListArrayEcoClass = new DefaultListModel();

    DefaultListModel<Food> drinkListArrayFirstClass = new DefaultListModel();
    DefaultListModel<Food> drinkListArrayEcoClass = new DefaultListModel();

    DefaultListModel<Passanger> planePassangerList = new DefaultListModel();

    DefaultListModel<Passanger> allPassangers = new DefaultListModel<>();

    /**
     * Creates new form Main_screen
     */
    public Main_screen()
    {
        initComponents();
        fill();
        planeList.setModel(planeListArray);
        drinkList.setModel(drinkListArrayEcoClass);
        foodList.setModel(foodListArrayEcoClass);
        passangerInPlaneList.setModel(planePassangerList);
        foodList.setVisible(false);
        drinkList.setVisible(false);
        planeList.setSelectedIndex(0);

        //<editor-fold defaultstate="collapsed" desc="Admin Plane Tab">
        PassangerTab_allPassangerList.setModel(allPassangers);

        TabbedPane.remove(adminPlaneTab);
        TabbedPane.remove(adminOverviewTab);
        TabbedPane.remove(adminPassangerTab);
        TabbedPane.remove(adminSkyforge);

        //</editor-fold>
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        planeScrollPane = new javax.swing.JScrollPane();
        planeList = new javax.swing.JList<>();
        searchButton = new javax.swing.JTextField();
        planeListLockButton = new javax.swing.JButton();
        TabbedPane = new javax.swing.JTabbedPane();
        welcomeTab = new javax.swing.JPanel();
        newPassangerTab = new javax.swing.JPanel();
        ClassLabel = new javax.swing.JLabel();
        prisListLabel = new javax.swing.JLabel();
        flightOptionsLabel = new javax.swing.JLabel();
        classPrisLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        foodList = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        drinkList = new javax.swing.JList<>();
        foodCheck = new javax.swing.JCheckBox();
        drinkCheck = new javax.swing.JCheckBox();
        classCheck = new javax.swing.JCheckBox();
        foodTotalLabel = new javax.swing.JLabel();
        prisTotalLabel = new javax.swing.JLabel();
        passangerLabel = new javax.swing.JLabel();
        yourNameInput = new javax.swing.JTextField();
        bookButton = new javax.swing.JButton();
        BookingStatusLabel = new javax.swing.JLabel();
        adminPlaneTab = new javax.swing.JPanel();
        planeComboBox = new javax.swing.JComboBox<>();
        passangerInPlanePane = new javax.swing.JScrollPane();
        passangerInPlaneList = new javax.swing.JList<>();
        planeTab_TotalValue_textLabel = new javax.swing.JLabel();
        planeTab_totalValue_value = new javax.swing.JLabel();
        PlaneTab_avaFirst_textLabel = new javax.swing.JLabel();
        planeTab_avaFirst_value = new javax.swing.JLabel();
        planeTab_avaEco_textLabel = new javax.swing.JLabel();
        planeTab_avaEco_value = new javax.swing.JLabel();
        planeTab_planeId_textLabel = new javax.swing.JLabel();
        planeTab_planeID_value = new javax.swing.JLabel();
        adminPassangerTab = new javax.swing.JPanel();
        allPassangerPane = new javax.swing.JScrollPane();
        PassangerTab_allPassangerList = new javax.swing.JList<>();
        passangerTab_id_textLabel = new javax.swing.JLabel();
        passangerTab_id_value = new javax.swing.JLabel();
        passangerTab_name_textLabel = new javax.swing.JLabel();
        passangerTab_name_value = new javax.swing.JLabel();
        passangerTab_ticketRank_textLabel = new javax.swing.JLabel();
        passangerTab_ticketRank_value = new javax.swing.JLabel();
        passangerTab_planeCallsign_textLabel = new javax.swing.JLabel();
        passangerTab_planeCallsign_value = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        passangerTab_food_list = new javax.swing.JList<>();
        passangerTab_food_textLabel = new javax.swing.JLabel();
        passangerTab_food_value = new javax.swing.JLabel();
        passangerTab_totalValue_textLabel = new javax.swing.JLabel();
        passangerTab_totalValue_value = new javax.swing.JLabel();
        adminSkyforge = new javax.swing.JPanel();
        adminSkyforge_callsign_textLabel = new javax.swing.JLabel();
        adminSkyforge_ecoClass_textLabel = new javax.swing.JLabel();
        adminSkyforge_firstClass_textLabel = new javax.swing.JLabel();
        adminSkyforge_ecoClass_value = new javax.swing.JSpinner();
        adminSkyforge_firstClass_value = new javax.swing.JSpinner();
        adminSkyforge_maxPassanger_textLabel = new javax.swing.JLabel();
        adminSkyforge_maxPassanger_value = new javax.swing.JLabel();
        adminSkyforge_expectedPayout_textLabel = new javax.swing.JLabel();
        adminSkyforge_expectedPayout_value = new javax.swing.JLabel();
        adminSkyforge_orderPlaneButton = new javax.swing.JButton();
        adminSkyforge_callsign_value = new javax.swing.JTextField();
        adminOverviewTab = new javax.swing.JPanel();
        clock = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        planeList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        planeList.setCellRenderer(new planeCellRenderer());
        planeList.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                planeListKeyTyped(evt);
            }
        });
        planeScrollPane.setViewportView(planeList);

        searchButton.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                searchButtonFocusGained(evt);
            }
        });

        planeListLockButton.setText("Lock");
        planeListLockButton.setEnabled(false);

        TabbedPane.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                TabbedPaneStateChanged(evt);
            }
        });

        welcomeTab.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout welcomeTabLayout = new javax.swing.GroupLayout(welcomeTab);
        welcomeTab.setLayout(welcomeTabLayout);
        welcomeTabLayout.setHorizontalGroup(
            welcomeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );
        welcomeTabLayout.setVerticalGroup(
            welcomeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 318, Short.MAX_VALUE)
        );

        TabbedPane.addTab("Welcome", welcomeTab);

        newPassangerTab.setBackground(new java.awt.Color(255, 255, 255));

        ClassLabel.setText("Class");

        prisListLabel.setText("Pris");

        flightOptionsLabel.setText("Selections");

        classPrisLabel.setText("5000");

        foodList.setCellRenderer(new foodCellRenderer());
        foodList.setEnabled(false);
        foodList.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                foodListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(foodList);

        drinkList.setCellRenderer(new foodCellRenderer());
        drinkList.setEnabled(false);
        drinkList.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                drinkListValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(drinkList);

        foodCheck.setBackground(new java.awt.Color(255, 255, 255));
        foodCheck.setText("Food");
        foodCheck.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                foodCheckActionPerformed(evt);
            }
        });

        drinkCheck.setBackground(new java.awt.Color(255, 255, 255));
        drinkCheck.setText("Drink");
        drinkCheck.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                drinkCheckActionPerformed(evt);
            }
        });

        classCheck.setBackground(new java.awt.Color(255, 255, 255));
        classCheck.setText("First Class");
        classCheck.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                classCheckActionPerformed(evt);
            }
        });

        foodTotalLabel.setText("0");

        prisTotalLabel.setText("5000");

        passangerLabel.setText("Your Name");

        bookButton.setText("Book");
        bookButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bookButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newPassangerTabLayout = new javax.swing.GroupLayout(newPassangerTab);
        newPassangerTab.setLayout(newPassangerTabLayout);
        newPassangerTabLayout.setHorizontalGroup(
            newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newPassangerTabLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newPassangerTabLayout.createSequentialGroup()
                        .addGroup(newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(flightOptionsLabel)
                            .addGroup(newPassangerTabLayout.createSequentialGroup()
                                .addGroup(newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(foodCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(drinkCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(newPassangerTabLayout.createSequentialGroup()
                                .addComponent(ClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(classCheck)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prisTotalLabel)
                            .addGroup(newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(prisListLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(classPrisLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                                .addComponent(foodTotalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(24, 24, 24))
                    .addGroup(newPassangerTabLayout.createSequentialGroup()
                        .addGroup(newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passangerLabel)
                            .addComponent(yourNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BookingStatusLabel))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        newPassangerTabLayout.setVerticalGroup(
            newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newPassangerTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prisListLabel)
                    .addComponent(flightOptionsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClassLabel)
                    .addComponent(classPrisLabel)
                    .addComponent(classCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foodCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drinkCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(foodTotalLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passangerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yourNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(prisTotalLabel)
                .addGap(18, 18, 18)
                .addGroup(newPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookButton)
                    .addComponent(BookingStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        TabbedPane.addTab("New", newPassangerTab);

        adminPlaneTab.setBackground(new java.awt.Color(255, 255, 255));

        planeComboBox.setRenderer(new basicCellRenderer());
        planeComboBox.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                planeComboBoxItemStateChanged(evt);
            }
        });

        passangerInPlaneList.setBackground(new java.awt.Color(204, 204, 204));
        passangerInPlaneList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        passangerInPlaneList.setCellRenderer(new passangerCellRenderer());
        passangerInPlanePane.setViewportView(passangerInPlaneList);

        planeTab_TotalValue_textLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        planeTab_TotalValue_textLabel.setText("Total Value");

        planeTab_totalValue_value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        planeTab_totalValue_value.setText("0");

        PlaneTab_avaFirst_textLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PlaneTab_avaFirst_textLabel.setText("First Class Seats");

        planeTab_avaFirst_value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        planeTab_avaFirst_value.setText("0");

        planeTab_avaEco_textLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        planeTab_avaEco_textLabel.setText("Eco Class Seats");

        planeTab_avaEco_value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        planeTab_avaEco_value.setText("0");

        planeTab_planeId_textLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        planeTab_planeId_textLabel.setText("Plane ID");

        planeTab_planeID_value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        planeTab_planeID_value.setText(" ");

        javax.swing.GroupLayout adminPlaneTabLayout = new javax.swing.GroupLayout(adminPlaneTab);
        adminPlaneTab.setLayout(adminPlaneTabLayout);
        adminPlaneTabLayout.setHorizontalGroup(
            adminPlaneTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPlaneTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminPlaneTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(planeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(adminPlaneTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(planeTab_avaFirst_value, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(planeTab_totalValue_value, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(planeTab_TotalValue_textLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PlaneTab_avaFirst_textLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(adminPlaneTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(planeTab_planeId_textLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(planeTab_planeID_value, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(planeTab_avaEco_value, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(planeTab_avaEco_textLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passangerInPlanePane, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminPlaneTabLayout.setVerticalGroup(
            adminPlaneTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPlaneTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminPlaneTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passangerInPlanePane, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .addGroup(adminPlaneTabLayout.createSequentialGroup()
                        .addComponent(planeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(planeTab_TotalValue_textLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(planeTab_totalValue_value)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PlaneTab_avaFirst_textLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(planeTab_avaFirst_value)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(planeTab_avaEco_textLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(planeTab_avaEco_value)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(planeTab_planeId_textLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(planeTab_planeID_value)))
                .addContainerGap())
        );

        TabbedPane.addTab("Planes", adminPlaneTab);

        adminPassangerTab.setBackground(new java.awt.Color(255, 255, 255));

        PassangerTab_allPassangerList.setBackground(new java.awt.Color(204, 204, 204));
        PassangerTab_allPassangerList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        PassangerTab_allPassangerList.setCellRenderer(new basicCellRenderer());
        PassangerTab_allPassangerList.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                PassangerTab_allPassangerListValueChanged(evt);
            }
        });
        allPassangerPane.setViewportView(PassangerTab_allPassangerList);

        passangerTab_id_textLabel.setText("Id:");

        passangerTab_id_value.setText(" ");

        passangerTab_name_textLabel.setText("Name:");

        passangerTab_name_value.setText(" ");

        passangerTab_ticketRank_textLabel.setText("Ticket:");

        passangerTab_ticketRank_value.setText(" ");

        passangerTab_planeCallsign_textLabel.setText("Plane:");

        passangerTab_planeCallsign_value.setText(" ");

        passangerTab_food_list.setBackground(new java.awt.Color(204, 204, 204));
        passangerTab_food_list.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        passangerTab_food_list.setCellRenderer(new basicCellRenderer());
        passangerTab_food_list.setEnabled(false);
        jScrollPane1.setViewportView(passangerTab_food_list);

        passangerTab_food_textLabel.setText("Food:");

        passangerTab_food_value.setText(" ");

        passangerTab_totalValue_textLabel.setText("Total:");

        passangerTab_totalValue_value.setText(" ");

        javax.swing.GroupLayout adminPassangerTabLayout = new javax.swing.GroupLayout(adminPassangerTab);
        adminPassangerTab.setLayout(adminPassangerTabLayout);
        adminPassangerTabLayout.setHorizontalGroup(
            adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminPassangerTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminPassangerTabLayout.createSequentialGroup()
                        .addGroup(adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passangerTab_name_textLabel)
                            .addComponent(passangerTab_id_textLabel))
                        .addGap(7, 7, 7)
                        .addGroup(adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passangerTab_id_value, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(passangerTab_name_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(adminPassangerTabLayout.createSequentialGroup()
                        .addComponent(passangerTab_totalValue_textLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passangerTab_totalValue_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(adminPassangerTabLayout.createSequentialGroup()
                        .addGroup(adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(passangerTab_planeCallsign_textLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(passangerTab_food_textLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(passangerTab_ticketRank_textLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passangerTab_ticketRank_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passangerTab_planeCallsign_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passangerTab_food_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allPassangerPane, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        adminPassangerTabLayout.setVerticalGroup(
            adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPassangerTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminPassangerTabLayout.createSequentialGroup()
                        .addGroup(adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passangerTab_id_textLabel)
                            .addComponent(passangerTab_id_value))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passangerTab_name_textLabel)
                            .addComponent(passangerTab_name_value))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passangerTab_ticketRank_textLabel)
                            .addComponent(passangerTab_ticketRank_value))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passangerTab_planeCallsign_textLabel)
                            .addComponent(passangerTab_planeCallsign_value))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passangerTab_food_textLabel)
                            .addComponent(passangerTab_food_value))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(adminPassangerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passangerTab_totalValue_textLabel)
                            .addComponent(passangerTab_totalValue_value)))
                    .addComponent(allPassangerPane))
                .addContainerGap())
        );

        TabbedPane.addTab("Passangers", adminPassangerTab);

        adminSkyforge.setBackground(new java.awt.Color(255, 255, 255));

        adminSkyforge_callsign_textLabel.setText("Callsign");

        adminSkyforge_ecoClass_textLabel.setText("Economy");

        adminSkyforge_firstClass_textLabel.setText("First Class");

        adminSkyforge_ecoClass_value.setModel(new javax.swing.SpinnerNumberModel(0, 0, 30, 1));
        adminSkyforge_ecoClass_value.setBorder(null);
        adminSkyforge_ecoClass_value.setEditor(new javax.swing.JSpinner.NumberEditor(adminSkyforge_ecoClass_value, ""));
        adminSkyforge_ecoClass_value.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                adminSkyforge_ecoClass_valueStateChanged(evt);
            }
        });

        adminSkyforge_firstClass_value.setModel(new javax.swing.SpinnerNumberModel(0, 0, 30, 1));
        adminSkyforge_firstClass_value.setBorder(null);
        adminSkyforge_firstClass_value.setEditor(new javax.swing.JSpinner.NumberEditor(adminSkyforge_firstClass_value, ""));
        adminSkyforge_firstClass_value.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                adminSkyforge_firstClass_valueStateChanged(evt);
            }
        });

        adminSkyforge_maxPassanger_textLabel.setText("Max Cap");

        adminSkyforge_maxPassanger_value.setText(" ");

        adminSkyforge_expectedPayout_textLabel.setText("Payout");

        adminSkyforge_expectedPayout_value.setText(" ");

        adminSkyforge_orderPlaneButton.setText("Order");
        adminSkyforge_orderPlaneButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                adminSkyforge_orderPlaneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminSkyforgeLayout = new javax.swing.GroupLayout(adminSkyforge);
        adminSkyforge.setLayout(adminSkyforgeLayout);
        adminSkyforgeLayout.setHorizontalGroup(
            adminSkyforgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminSkyforgeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminSkyforgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminSkyforgeLayout.createSequentialGroup()
                        .addGroup(adminSkyforgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(adminSkyforge_expectedPayout_textLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adminSkyforge_maxPassanger_textLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adminSkyforge_firstClass_textLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adminSkyforge_callsign_textLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adminSkyforge_ecoClass_textLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(adminSkyforgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adminSkyforge_maxPassanger_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adminSkyforge_expectedPayout_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(adminSkyforgeLayout.createSequentialGroup()
                                .addGroup(adminSkyforgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(adminSkyforge_ecoClass_value, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(adminSkyforge_firstClass_value, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 176, Short.MAX_VALUE))
                            .addComponent(adminSkyforge_callsign_value)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminSkyforgeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(adminSkyforge_orderPlaneButton)))
                .addContainerGap())
        );
        adminSkyforgeLayout.setVerticalGroup(
            adminSkyforgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminSkyforgeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminSkyforgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminSkyforge_callsign_textLabel)
                    .addComponent(adminSkyforge_callsign_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminSkyforgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminSkyforge_ecoClass_textLabel)
                    .addComponent(adminSkyforge_ecoClass_value, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminSkyforgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminSkyforge_firstClass_textLabel)
                    .addComponent(adminSkyforge_firstClass_value, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminSkyforgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminSkyforge_maxPassanger_textLabel)
                    .addComponent(adminSkyforge_maxPassanger_value))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminSkyforgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminSkyforge_expectedPayout_textLabel)
                    .addComponent(adminSkyforge_expectedPayout_value))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
                .addComponent(adminSkyforge_orderPlaneButton)
                .addContainerGap())
        );

        TabbedPane.addTab("Hangar", adminSkyforge);

        adminOverviewTab.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout adminOverviewTabLayout = new javax.swing.GroupLayout(adminOverviewTab);
        adminOverviewTab.setLayout(adminOverviewTabLayout);
        adminOverviewTabLayout.setHorizontalGroup(
            adminOverviewTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );
        adminOverviewTabLayout.setVerticalGroup(
            adminOverviewTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 318, Short.MAX_VALUE)
        );

        TabbedPane.addTab("Overview", adminOverviewTab);

        clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clock.setText("00:00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(planeScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(planeListLockButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(planeScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(planeListLockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addComponent(TabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void planeListKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_planeListKeyTyped
    {//GEN-HEADEREND:event_planeListKeyTyped
        admin = admin + evt.getKeyChar();
        if (admin.equals("admin"))
        {
            TabbedPane.add("Planes", adminPlaneTab);
            TabbedPane.add("Passanger", adminPassangerTab);
            TabbedPane.add("Skyforge", adminSkyforge);
            TabbedPane.add("Overview", adminOverviewTab);
        }
    }//GEN-LAST:event_planeListKeyTyped

    private void searchButtonFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_searchButtonFocusGained
    {//GEN-HEADEREND:event_searchButtonFocusGained
        admin = "";
    }//GEN-LAST:event_searchButtonFocusGained

    private void foodListValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_foodListValueChanged
    {//GEN-HEADEREND:event_foodListValueChanged
        if (foodList.getSelectedIndex() >= 0)
        {
            int tempPrice = 0;
            for (int i = 0; i < foodList.getSelectedIndices().length; i++)
            {
                tempPrice = tempPrice + rankListReturner(false).get(foodList.getSelectedIndices()[i]).getPrice();

            }
            foodTotal = tempPrice;
            calculateTotal();
        }
    }//GEN-LAST:event_foodListValueChanged

    private void drinkListValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_drinkListValueChanged
    {//GEN-HEADEREND:event_drinkListValueChanged
        if (drinkList.getSelectedIndex() >= 0)
        {
            int tempPrice = 0;
            for (int i = 0; i < drinkList.getSelectedIndices().length; i++)
            {
                tempPrice = tempPrice + rankListReturner(true).get(drinkList.getSelectedIndices()[i]).getPrice();

            }
            drinkTotal = tempPrice;
            calculateTotal();
        }
    }//GEN-LAST:event_drinkListValueChanged

    private void foodCheckActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_foodCheckActionPerformed
    {//GEN-HEADEREND:event_foodCheckActionPerformed
        if (foodCheck.isSelected())
        {
            foodList.setVisible(true);
            foodList.setEnabled(true);
            foodList.setSelectedIndex(0);
            foodTotal = rankListReturner(false).get(foodList.getSelectedIndex()).getPrice();
        } else
        {
            foodList.setVisible(false);
            foodList.setEnabled(false);
            foodTotal = 0;
            foodList.clearSelection();

        }
        calculateTotal();
    }//GEN-LAST:event_foodCheckActionPerformed

    private void drinkCheckActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_drinkCheckActionPerformed
    {//GEN-HEADEREND:event_drinkCheckActionPerformed
        if (drinkCheck.isSelected())
        {
            drinkList.setEnabled(true);
            drinkList.setVisible(true);
            drinkList.setSelectedIndex(0);
            drinkTotal = rankListReturner(true).get(drinkList.getSelectedIndex()).getPrice();
        } else
        {
            drinkList.setEnabled(false);
            drinkList.setVisible(false);
            drinkTotal = 0;
            drinkList.clearSelection();
        }
        calculateTotal();
    }//GEN-LAST:event_drinkCheckActionPerformed

    private void classCheckActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_classCheckActionPerformed
    {//GEN-HEADEREND:event_classCheckActionPerformed
        if (classCheck.isSelected())
        {
            classPrisLabel.setText("" + FIRSTCLASSPRICE);
            classTotal = FIRSTCLASSPRICE;
            foodList.setModel(foodListArrayFirstClass);
            drinkList.setModel(drinkListArrayFirstClass);
            foodList.clearSelection();
            drinkList.clearSelection();
        } else
        {
            classPrisLabel.setText("" + ECONOMYCLASSPRICE);
            classTotal = ECONOMYCLASSPRICE;
            foodList.setModel(foodListArrayEcoClass);
            drinkList.setModel(drinkListArrayEcoClass);
            foodList.clearSelection();
            drinkList.clearSelection();
        }
        calculateTotal();
    }//GEN-LAST:event_classCheckActionPerformed

    private void bookButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bookButtonActionPerformed
    {//GEN-HEADEREND:event_bookButtonActionPerformed
        Passanger pass = logic.createPassanger(yourNameInput.getText());
        Airplane plane = planeListArray.getElementAt(planeList.getSelectedIndex());
        ArrayList<Food> food = new ArrayList<>();
        food.addAll(drinkList.getSelectedValuesList());
        food.addAll(foodList.getSelectedValuesList());

        int rank = ECONOMYCLASS;
        if (classCheck.isSelected())
        {
            rank = FIRSTCLASS;
        }

        if (logic.bookTicket(plane, pass, rank, food))
        {
            BookingStatusLabel.setText("Welcome Aboard " + plane.getCallsign());
        } else
        {
            BookingStatusLabel.setText("Something went wrong");
        }
        planeList.clearSelection();
    }//GEN-LAST:event_bookButtonActionPerformed

    private void planeComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_planeComboBoxItemStateChanged
    {//GEN-HEADEREND:event_planeComboBoxItemStateChanged
        Airplane plane = (Airplane) planeComboBox.getSelectedItem();
        planePassangerList.clear();
        plane.getPassangers().stream().forEach((item)
                -> 
                {
                    planePassangerList.addElement(item);
        });

        planeTab_avaEco_value.setText(plane.getAvEco() + " / " + plane.getNrOfEco());
        planeTab_avaFirst_value.setText(plane.getAvFirst() + " / " + plane.getNrOfFirst());
        planeTab_planeID_value.setText("" + plane.getId());
        planeTab_totalValue_value.setText("" + plane.getTotalIncome() + " kr");
    }//GEN-LAST:event_planeComboBoxItemStateChanged

    private void PassangerTab_allPassangerListValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_PassangerTab_allPassangerListValueChanged
    {//GEN-HEADEREND:event_PassangerTab_allPassangerListValueChanged
        Passanger pass = PassangerTab_allPassangerList.getSelectedValue();
        passangerTab_id_value.setText("" + pass.getId());
        passangerTab_name_value.setText(pass.getName());

        if (pass.getTicket().getId() != -1)
        {
            passangerTab_planeCallsign_value.setText("" + logic.find_Plane_based_on_Passanger(pass).getCallsign());
            passangerTab_totalValue_value.setText("" + pass.getTicket().getTotalCost());
            passangerTab_food_value.setText("" + pass.getTicket().getFoodTotal());
            DefaultListModel<Food> tempList = new DefaultListModel<>();
            pass.getTicket().getFood().stream().forEach((item)
                    -> 
                    {
                        tempList.addElement(item);
            });
            passangerTab_food_list.setModel(tempList);
            if (pass.getTicket().getRank() == FIRSTCLASS)
            {
                passangerTab_ticketRank_value.setText("First Class");
            } else if (pass.getTicket().getRank() == ECONOMYCLASS)
            {
                passangerTab_ticketRank_value.setText("Eco Class");
            }
        } else
        {
            passangerTab_ticketRank_value.setText("No Ticket");
            passangerTab_planeCallsign_value.setText("No Plane");
            passangerTab_totalValue_value.setText("0");

        }
    }//GEN-LAST:event_PassangerTab_allPassangerListValueChanged

    private void TabbedPaneStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_TabbedPaneStateChanged
    {//GEN-HEADEREND:event_TabbedPaneStateChanged
        if (TabbedPane.getSelectedComponent().equals(adminPassangerTab))
        {
            allPassangers.clear();
            logic.db.PassangerDatabase.stream().forEach((item)
                    -> 
                    {
                        allPassangers.addElement(item);
            });
            try
            {
                Thread.sleep(100);
            } catch (InterruptedException ex)
            {
                Logger.getLogger(Main_screen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_TabbedPaneStateChanged

    private void adminSkyforge_orderPlaneButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_adminSkyforge_orderPlaneButtonActionPerformed
    {//GEN-HEADEREND:event_adminSkyforge_orderPlaneButtonActionPerformed
        Airplane plane = logic.createPlane(
                adminSkyforge_callsign_value.getText(),
                (Integer) adminSkyforge_firstClass_value.getValue(),
                (Integer) adminSkyforge_ecoClass_value.getValue()
        );

        planeListArray.addElement(plane);
        planeComboBox.addItem(plane);

    }//GEN-LAST:event_adminSkyforge_orderPlaneButtonActionPerformed

    private void adminSkyforge_ecoClass_valueStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_adminSkyforge_ecoClass_valueStateChanged
    {//GEN-HEADEREND:event_adminSkyforge_ecoClass_valueStateChanged
        if ((Integer) adminSkyforge_ecoClass_value.getValue() > planeEcoClass)
        {
            planeEcoClass++;
            planeTotalPayout = planeTotalPayout + 5000;
        } else if ((Integer) adminSkyforge_ecoClass_value.getValue() < planeEcoClass)
        {
            planeEcoClass--;
            planeTotalPayout = planeTotalPayout - 5000;
        }
        planeTotalCap = planeEcoClass + planeFirstClass;
        adminSkyforge_maxPassanger_value.setText("" + planeTotalCap);
        adminSkyforge_expectedPayout_value.setText("" + planeTotalPayout);

    }//GEN-LAST:event_adminSkyforge_ecoClass_valueStateChanged


    private void adminSkyforge_firstClass_valueStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_adminSkyforge_firstClass_valueStateChanged
    {//GEN-HEADEREND:event_adminSkyforge_firstClass_valueStateChanged
        if ((Integer) adminSkyforge_firstClass_value.getValue() > planeFirstClass)
        {
            planeFirstClass++;
            planeTotalPayout = planeTotalPayout + 20000;
        } else if ((Integer) adminSkyforge_firstClass_value.getValue() < planeFirstClass)
        {
            planeFirstClass--;
            planeTotalPayout = planeTotalPayout - 20000;
        }
        planeTotalCap = planeEcoClass + planeFirstClass;
        adminSkyforge_maxPassanger_value.setText("" + planeTotalCap);
        planeTotalPayout = planeTotalPayout + 20000;
        adminSkyforge_expectedPayout_value.setText("" + planeTotalPayout);

    }//GEN-LAST:event_adminSkyforge_firstClass_valueStateChanged

    //<editor-fold defaultstate="collapsed" desc="Cell Renderers">
    class planeCellRenderer extends JLabel implements ListCellRenderer
    {

        private final Color HIGHLIGHT_COLOR = new Color(0, 0, 128);

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus)
        {
            Airplane entry = (Airplane) value;
            setText(" " + entry.getCallsign() + " : " + entry.getAvEco() + " : " + entry.getAvFirst());
            setIcon(null);
            if (isSelected)
            {
//                setBackground(Color.GRAY);
                setForeground(HIGHLIGHT_COLOR);
            } else
            {
//                setBackground(list.getBackground());
                setForeground(Color.BLACK);
            }

            return this;
        }

    }

    class foodCellRenderer extends JLabel implements ListCellRenderer
    {

        private final Color HIGHLIGHT_COLOR = new Color(0, 0, 128);

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus)
        {
            Food entry = (Food) value;
            setText(" " + entry.getName() + " Pris: " + entry.getPrice());
            setIcon(null);
            if (isSelected)
            {
//                setBackground(Color.GRAY);
                setForeground(HIGHLIGHT_COLOR);
            } else
            {
//                setBackground(Color.BLACK);
                setForeground(Color.BLACK);
            }

            return this;
        }

    }

    /**
     * EDIT THIS ONE IF YOU USE IT FOR OTHER THAN PLANE
     */
    class basicCellRenderer extends JLabel implements ListCellRenderer
    {

        private final Color HIGHLIGHT_COLOR = new Color(0, 0, 128);
        private final Color FIRST_CLASS = new Color(250, 250, 210);

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus)
        {

            if (value instanceof Airplane)
            {
                Airplane entry = (Airplane) value;
                setText(" " + entry.getCallsign());

            } else if (value instanceof Passanger)
            {
                Passanger entry = (Passanger) value;
                setText(" " + entry.getId() + " - " + entry.getName());
                if (!isSelected)
                {
                    if (entry.getTicket().getRank() == FIRSTCLASS)
                    {
                        setForeground(FIRST_CLASS);
                    } else
                    {
                        setForeground(Color.black);
                    }
                }
            } else if (value instanceof Ticket)
            {
                Ticket entry = (Ticket) value;
                setText(" PasID: " + entry.getPassangerID() + " PlaID: " + entry.getAirplaneID() + " Value: " + entry.getTotalCost());
                if (!isSelected)
                {
                    setForeground(Color.black);
                }
            } else if (value instanceof Food)
            {
                Food entry = (Food) value;
                setText(" " + entry.getName());
                if (!isSelected)
                {
                    if (entry.getIsDrink())
                    {
                        setForeground(Color.blue);
                    } else
                    {
                        setForeground(Color.green);
                    }
                }
            }
            setIcon(null);

            if (isSelected)
            {
//                setBackground(Color.GRAY);
                setForeground(HIGHLIGHT_COLOR);
            }
//            else
//            {
//                setBackground(Color.BLACK);
//                setForeground(Color.BLACK);
//                
//            }
            return this;
        }
    }

    class passangerCellRenderer extends JLabel implements ListCellRenderer
    {

        private final Color HIGHLIGHT_COLOR = new Color(0, 0, 128);
        private final Color FIRST_CLASS = new Color(250, 250, 210);

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus)
        {
            Passanger entry = (Passanger) value;
            setText(" " + entry.getName() + " " + entry.getTicket().getTotalCost());
            setIcon(null);

            if (isSelected)
            {
//                setBackground(Color.GRAY);
                setForeground(HIGHLIGHT_COLOR);
            } else
            {
//                setBackground(Color.BLACK);
                setForeground(Color.BLACK);
                if (entry.getTicket().getRank() == FIRSTCLASS)
                {
                    setForeground(FIRST_CLASS);
                }
            }

            return this;
        }
    }
//</editor-fold>

    public DefaultListModel<Food> rankListReturner(boolean isDrink)
    {
        if (isDrink == false)
        {
            if (classCheck.isSelected())
            {
                return foodListArrayFirstClass;
            } else
            {
                return foodListArrayEcoClass;
            }
        } else if (classCheck.isSelected())
        {
            return drinkListArrayFirstClass;
        } else
        {
            return drinkListArrayEcoClass;
        }
    }

    public void calculateTotal()
    {
        totalPris = foodTotal + drinkTotal + classTotal;
        int temp = foodTotal + drinkTotal;
        foodTotalLabel.setText("" + temp);
        prisTotalLabel.setText("" + totalPris);
    }

    public final void fill()
    {
        logic.db.HangerDatabase.stream().forEach((item)
                -> 
                {
                    planeListArray.addElement(item);
                    planeComboBox.addItem(item);
        });

        logic.db.FoodMenu.stream().forEach((item)
                -> 
                {
                    if (item.getRank() == FIRSTCLASS)
                    {
                        if (item.getIsDrink())
                        {
                            drinkListArrayFirstClass.addElement(item);
                        } else
                        {
                            foodListArrayFirstClass.addElement(item);
                        }
                    } else if (item.getIsDrink())
                    {
                        drinkListArrayEcoClass.addElement(item);
                    } else
                    {
                        foodListArrayEcoClass.addElement(item);
                    }
        });

        logic.db.PassangerDatabase.stream().forEach((item)
                -> 
                {
                    allPassangers.addElement(item);
        });

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Windows".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Main_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Main_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Main_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Main_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new Main_screen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BookingStatusLabel;
    private javax.swing.JLabel ClassLabel;
    private javax.swing.JList<Passanger> PassangerTab_allPassangerList;
    private javax.swing.JLabel PlaneTab_avaFirst_textLabel;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JPanel adminOverviewTab;
    private javax.swing.JPanel adminPassangerTab;
    private javax.swing.JPanel adminPlaneTab;
    private javax.swing.JPanel adminSkyforge;
    private javax.swing.JLabel adminSkyforge_callsign_textLabel;
    private javax.swing.JTextField adminSkyforge_callsign_value;
    private javax.swing.JLabel adminSkyforge_ecoClass_textLabel;
    private javax.swing.JSpinner adminSkyforge_ecoClass_value;
    private javax.swing.JLabel adminSkyforge_expectedPayout_textLabel;
    private javax.swing.JLabel adminSkyforge_expectedPayout_value;
    private javax.swing.JLabel adminSkyforge_firstClass_textLabel;
    private javax.swing.JSpinner adminSkyforge_firstClass_value;
    private javax.swing.JLabel adminSkyforge_maxPassanger_textLabel;
    private javax.swing.JLabel adminSkyforge_maxPassanger_value;
    private javax.swing.JButton adminSkyforge_orderPlaneButton;
    private javax.swing.JScrollPane allPassangerPane;
    private javax.swing.JButton bookButton;
    private javax.swing.JCheckBox classCheck;
    private javax.swing.JLabel classPrisLabel;
    private javax.swing.JLabel clock;
    private javax.swing.JCheckBox drinkCheck;
    private javax.swing.JList<Food> drinkList;
    private javax.swing.JLabel flightOptionsLabel;
    private javax.swing.JCheckBox foodCheck;
    private javax.swing.JList<Food> foodList;
    private javax.swing.JLabel foodTotalLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel newPassangerTab;
    private javax.swing.JList<Passanger> passangerInPlaneList;
    private javax.swing.JScrollPane passangerInPlanePane;
    private javax.swing.JLabel passangerLabel;
    private javax.swing.JList<Food> passangerTab_food_list;
    private javax.swing.JLabel passangerTab_food_textLabel;
    private javax.swing.JLabel passangerTab_food_value;
    private javax.swing.JLabel passangerTab_id_textLabel;
    private javax.swing.JLabel passangerTab_id_value;
    private javax.swing.JLabel passangerTab_name_textLabel;
    private javax.swing.JLabel passangerTab_name_value;
    private javax.swing.JLabel passangerTab_planeCallsign_textLabel;
    private javax.swing.JLabel passangerTab_planeCallsign_value;
    private javax.swing.JLabel passangerTab_ticketRank_textLabel;
    private javax.swing.JLabel passangerTab_ticketRank_value;
    private javax.swing.JLabel passangerTab_totalValue_textLabel;
    private javax.swing.JLabel passangerTab_totalValue_value;
    private javax.swing.JComboBox<Airplane> planeComboBox;
    private javax.swing.JList<Airplane> planeList;
    private javax.swing.JButton planeListLockButton;
    private javax.swing.JScrollPane planeScrollPane;
    private javax.swing.JLabel planeTab_TotalValue_textLabel;
    private javax.swing.JLabel planeTab_avaEco_textLabel;
    private javax.swing.JLabel planeTab_avaEco_value;
    private javax.swing.JLabel planeTab_avaFirst_value;
    private javax.swing.JLabel planeTab_planeID_value;
    private javax.swing.JLabel planeTab_planeId_textLabel;
    private javax.swing.JLabel planeTab_totalValue_value;
    private javax.swing.JLabel prisListLabel;
    private javax.swing.JLabel prisTotalLabel;
    private javax.swing.JTextField searchButton;
    private javax.swing.JPanel welcomeTab;
    private javax.swing.JTextField yourNameInput;
    // End of variables declaration//GEN-END:variables
}
